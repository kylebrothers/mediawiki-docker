<?php
# This file was automatically generated by the MediaWiki 1.35.7
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "BrothersBrothers";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

# KB: This might be default, but just adding it in case it is not
$wgUseSiteJs = true;

## KB: This sets the default for all pages to not be indexed by Google and other sites
$wgDefaultRobotPolicy = 'noindex,nofollow';

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://192.168.0.132:8080";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/wiki.png" ];

## UPO means: this is also a user preference option
$wgEnableEmail = false;
$wgEnableUserEmail = false; # UPO

$wgEmergencyContact = "kyle.b.brothers@gmail.com";
$wgPasswordSender = "kyle.b.brothers@gmail.com";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "database";
$wgDBname = "mediawiki";
$wgDBuser = "root";
$wgDBpassword = "password";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgFileExtensions = array('png', 'gif', 'jpg', 'jpeg', 'doc', 'xls', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx', 'pptx', 'ps');

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "fde4af77bfe31f20dbf5e1d2f872ae5017bcc5a39fdca06f92a1b7cfd44e9db";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "828586d4cf144e94";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
#$wgDefaultSkin = "vector";
wfLoadSkin( 'chameleon' );
$wgDefaultSkin= 'chameleon';
$wgChameleonLayoutFile=__DIR__ . '/var/www/html/skins/chameleon/layouts/fixedhead.xml';


# Enabled skins.
# The following skins were automatically enabled:
#wfLoadSkin( 'chameleon' );
#wfLoadSkin( 'MonoBook' );
#wfLoadSkin( 'Timeless' );
#wfLoadSkin( 'Vector' );


# End of automatically generated settings.
# Add more configuration options below.

#KB: Allow full HTML on pages
$wgRawHtml = true;

#KB: Extensions
wfLoadExtension( 'SemanticMediaWiki' );
enableSemantics( '192.168.0.132:8080' );
wfLoadExtension( 'Arrays' );
wfLoadExtension( 'Bootstrap' );
wfLoadExtension( 'DataTransfer' );
wfLoadExtension( 'HeaderTabs' );
require_once "$IP/extensions/HTMLets/HTMLets.php";
$wgHTMLetsDirectory = "$IP/extensions/HTMLets";
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'Maps' );
wfLoadExtension( 'PageForms' );
wfLoadExtension( "PageSchemas" );
wfLoadExtension( 'ParserFunctions' );
#wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SemanticCite' );
wfLoadExtension( 'SemanticCompoundQueries' );
wfLoadExtension( 'SemanticExtraSpecialProperties' );
wfLoadExtension( 'SemanticInterlanguageLinks' );
wfLoadExtension( 'SemanticMetaTags' );
wfLoadExtension( 'SemanticResultFormats' );
#wfLoadExtension( 'SemanticScribunto' );
require_once "$IP/extensions/Validator/Validator.php";
wfLoadExtension( 'XSL' );

$wgPFEnableStringFunctions = true;
$wgGroupPermissions['user']['editinterface'] = true;
$wgUseSiteJs = true;

# KB: Give Bureaucrats delete permission
$wgGroupPermissions['bureaucrat']['delete'] = true;

$wgShowExceptionDetails = true;